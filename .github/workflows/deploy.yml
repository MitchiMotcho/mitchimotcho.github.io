name: Deploy Next.js site to Pages

on:
    push:
        branches: ["main"]
    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write

concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Detect package manager
              id: pm
              run: |
                  if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
                    echo "manager=pnpm" >> $GITHUB_OUTPUT
                    echo "install=install" >> $GITHUB_OUTPUT
                    echo "runner=pnpm" >> $GITHUB_OUTPUT
                  elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
                    echo "manager=yarn" >> $GITHUB_OUTPUT
                    echo "install=install" >> $GITHUB_OUTPUT
                    echo "runner=yarn" >> $GITHUB_OUTPUT
                  elif [ -f "${{ github.workspace }}/package.json" ]; then
                    echo "manager=npm" >> $GITHUB_OUTPUT
                    echo "install=ci" >> $GITHUB_OUTPUT
                    echo "runner=npx --no-install" >> $GITHUB_OUTPUT
                  else
                    echo "Unable to determine package manager" >&2
                    exit 1
                  fi

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: ${{ steps.pm.outputs.manager }}

            - name: Setup Pages
              uses: actions/configure-pages@v5
              with:
                  static_site_generator: next

            - name: Restore Next.js cache
              uses: actions/cache@v4
              with:
                  path: .next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.mdx', 'next.config.*') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-

            - name: Install dependencies
              run: |
                  if [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then
                    corepack enable
                    corepack prepare pnpm@latest --activate
                  fi
                  ${{ steps.pm.outputs.manager }} ${{ steps.pm.outputs.install }}

            - name: Build static export via output export
              env:
                  NODE_OPTIONS: --max_old_space_size=4096
                  NEXT_TELEMETRY_DISABLED: 1
              run: ${{ steps.pm.outputs.runner }} next build

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: ./out

    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
